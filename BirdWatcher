
class BirdWatcher {
    private final int[] birdsPerDay;

    public BirdWatcher(int[] birdsPerDay) {
        this.birdsPerDay = birdsPerDay.clone();
    }

    public int[] getLastWeek() 
    {
        // throw new UnsupportedOperationException("Please implement the BirdWatcher.getLastWeek() method");
        return birdsPerDay;
    }

    public int getToday() 
    {
       // throw new UnsupportedOperationException("Please implement the BirdWatcher.getToday() method");

        return birdsPerDay[birdsPerDay.length-1];
    }

    public void incrementTodaysCount() 
    {
        //throw new UnsupportedOperationException("Please implement the BirdWatcher.incrementTodaysCount() metho
        birdsPerDay[birdsPerDay.length-1]+=1;
        
    }

    public boolean hasDayWithoutBirds() {
        //throw new UnsupportedOperationException("Please implement the BirdWatcher.hasDayWithoutBirds() method");
        for(int x:birdsPerDay)
            {
                if(x==0) return true;
                
            }
        return false;
    }

    public int getCountForFirstDays(int numberOfDays) {
        //throw new UnsupportedOperationException("Please implement the BirdWatcher.getCountForFirstDays() method");
        int sum=0;
        if(numberOfDays<birdsPerDay.length && numberOfDays>=0)
        {
        for(int i=0;i<numberOfDays;i++)
            {
                sum+=birdsPerDay[i];
            }
        return sum;
            }
        else{for(int i=0;i<birdsPerDay.length;i++)
            {
                sum+=birdsPerDay[i];
            }
        return sum;
            }
    }

    public int getBusyDays() {
        //throw new UnsupportedOperationException("Please implement the BirdWatcher.getBusyDays() method");
        int busyDay=0;
        for(int x:birdsPerDay)
            {
                if(x>=5) busyDay+=1;
            }
        return busyDay;
    }
}
